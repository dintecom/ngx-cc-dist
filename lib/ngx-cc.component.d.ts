import { Injector, OnInit, OnDestroy, DoCheck, ElementRef } from '@angular/core';
import { FocusMonitor } from '@angular/cdk/a11y';
import { ControlValueAccessor, NgControl, NgForm, FormGroupDirective } from '@angular/forms';
import { ErrorStateMatcher } from '@angular/material/core';
import { MatFormFieldControl } from '@angular/material/form-field';
import { Subject } from 'rxjs';
import { NgxCcService } from './ngx-cc.service';
import { CardConfig } from './ngx-cc.model';
export declare class NgxCcComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<NgxCcComponent> {
    private injector;
    private elRef;
    private parentForm;
    private parentFormGroup;
    private defaultErrorStateMatcher;
    private fm;
    private creditCardService;
    static nextId: number;
    styleClass: string;
    value: any;
    placeholder: string;
    readonly empty: boolean;
    required: boolean;
    disabled: boolean;
    defaultStyles: any;
    private _value;
    private _placeholder;
    private _disabled;
    private _defaultStyles;
    private _required;
    ngControl: NgControl;
    focused: boolean;
    errorState: boolean;
    cardNumber: string;
    cardIcon: string;
    card: CardConfig;
    onChange: any;
    onTouched: any;
    stateChanges: Subject<void>;
    maxNumberLimit: number;
    id: string;
    describedBy: string;
    readonly shouldLabelFloat: boolean;
    constructor(injector: Injector, elRef: ElementRef<HTMLElement>, parentForm: NgForm, parentFormGroup: FormGroupDirective, defaultErrorStateMatcher: ErrorStateMatcher, fm: FocusMonitor, creditCardService: NgxCcService);
    ngOnInit(): void;
    ngDoCheck(): void;
    writeValue(value: string): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDescribedByIds(ids: string[]): void;
    onContainerClick(event: MouseEvent): void;
    updateIcon(event: Event): void;
    updateOnTouch(): void;
    ngOnDestroy(): void;
    updateErrorState(): void;
}
