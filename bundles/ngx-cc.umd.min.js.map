{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-cc/lib/ngx-cc.service.ts","ng://ngx-cc/lib/validators/ngx-cc.validator.ts","ng://ngx-cc/lib/ngx-cc.icons.ts","ng://ngx-cc/lib/ngx-cc.component.ts","ng://ngx-cc/lib/validators/ngx-cc-date.validator.ts","ng://ngx-cc/lib/cc-date/cc-date.component.ts","ng://ngx-cc/lib/directives/number-only/number-only.directive.ts","ng://ngx-cc/lib/directives/format-date/format-date.directive.ts","ng://ngx-cc/lib/cc-cvv/cc-cvv.component.ts","ng://ngx-cc/lib/ngx-cc.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","NgxCcService","prototype","getCardType","cardNumber","creditCardType","prettyCardNumber","cardType","card","getTypeInfo","offsets","concat","gaps","length","components","start","end","Math","min","substring","join","Injectable","args","providedIn","CardValidator","control","validator","number","isValid","invalidCardNumber","cardIcons","default","visa","mastercard","discover","jcb","maestro","american-express","diners-club","NgxCcComponent","injector","elRef","fm","parentForm","parentFormGroup","defaultErrorStateMatcher","creditCardService","_this","this","_disabled","_defaultStyles","_required","ngControl","focused","errorState","cardIcon","stateChanges","Subject","id","nextId","describedBy","_formSubmitSubscription","ngSubmit","subscribe","markAsTouched","monitor","nativeElement","origin","Object","defineProperty","_value","onChange","_placeholder","placeholder","replace","req","coerceBooleanProperty","disabled","dis","val","empty","ngOnInit","get","NgControl","valueAccessor","ngDoCheck","updateErrorState","writeValue","registerOnChange","fn","registerOnTouched","onTouched","setDescribedByIds","ids","onContainerClick","event","tagName","toLowerCase","querySelector","focus","updateIcon","markAsDirty","maxNumberLimit","max","apply","arguments","__spread","lengths","type","updateOnTouch","ngOnDestroy","unsubscribe","stopMonitoring","complete","oldState","parent","matcher","newState","isErrorState","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","useValue","ɵ0","MatFormFieldControl","encapsulation","ViewEncapsulation","None","Injector","ElementRef","FocusMonitor","NgForm","decorators","Optional","FormGroupDirective","ErrorStateMatcher","Input","HostBinding","CardExpirationValidator","date","expirationDate","month","year","invalidDate","ɵ0$1","CcDateComponent","cardDate","onChanges","updateDate","NumberOnlyDirective","_ngxNumberOnly","flag","onKeyDown","ngxNumberOnly","indexOf","keyCode","ctrlKey","metaKey","shiftKey","preventDefault","ngxMaxLength","Directive","HostListener","FormatDateDirective","isUpdated","formatDate","eventValue","parseInt","setValue","CcCvvComponent","cardCvv","maxCvvLength","_cvvSize","updateValueAndValidity","validate","cvv","cvvSize","invalidCvv","updateCvv","NgxCcModule","NgModule","declarations","imports","CommonModule","FormsModule","MatInputModule","MatFormFieldModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport creditCardType from 'credit-card-type';\nimport { CardConfig } from './ngx-cc.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxCcService {\n\n  constructor() { }\n\n  getCardType(cardNumber: number | string): CardConfig {\n    return creditCardType(cardNumber)[0];\n  }\n\n  prettyCardNumber(cardNumber: string, cardType) {\n    const card = creditCardType.getTypeInfo(cardType);\n\n    if (card) {\n      const offsets = [].concat(0, card.gaps, cardNumber.length);\n      const components = [];\n\n      for (let i = 0; offsets[i] < cardNumber.length; i++) {\n        const start = offsets[i];\n        const end = Math.min(offsets[i + 1], cardNumber.length);\n        components.push(cardNumber.substring(start, end));\n      }\n\n      return components.join(' ');\n    }\n\n    return cardNumber;\n  }\n}\n","import { FormControl } from '@angular/forms';\nimport validator from 'card-validator';\n\nexport const CardValidator = (control: FormControl) => {\n    return validator.number(control.value).isValid ? null : { invalidCardNumber: true };\n};\n","export const cardIcons = {\n    default: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png',\n    visa: 'https://img.icons8.com/color/40/000000/visa.png',\n    mastercard: 'https://img.icons8.com/color/40/000000/mastercard.png',\n    discover: 'https://img.icons8.com/color/40/000000/discover.png',\n    jcb: 'https://img.icons8.com/color/40/000000/jcb.png',\n    maestro: 'https://img.icons8.com/color/40/000000/maestro.png',\n    'american-express': 'https://img.icons8.com/color/40/000000/amex.png',\n    'diners-club': 'https://img.icons8.com/color/40/000000/diners-club.png'\n};\n","import {\n  Component, HostBinding, Input, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ViewEncapsulation, ElementRef\n} from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { NgxCcService } from './ngx-cc.service';\nimport { CardConfig } from './ngx-cc.model';\nimport { CardValidator } from './validators/ngx-cc.validator';\nimport { cardIcons } from './ngx-cc.icons';\n\n@Component({\n  selector: 'ngx-cc',\n  template: `\n      <div class=\"ngx-cc-container\" [ngClass]=\"styleClass\">\n        <input *ngIf=\"!defaultStyles\"\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxNumberLimit\"\n        class=\"ngx-cc-input\"\n        type=\"text\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardNumber\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateIcon($event)\" />\n\n        <input *ngIf=\"defaultStyles\"\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxNumberLimit\"\n        class=\"ngx-cc-input-default\"\n        type=\"text\"\n        [placeholder]=\"placeholder\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardNumber\"\n        [ngStyle]=\"{'background-image': 'url(' + cardIcon + ')'}\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateIcon($event)\" />\n        <img *ngIf=\"!defaultStyles\" class=\"ngx-cc-suffix\" [src]=\"cardIcon\" />\n      </div>\n      `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxCcComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useValue: CardValidator,\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => NgxCcComponent),\n      multi: true\n    }\n  ],\n  styles: [\n    `\n    .ngx-cc-container {\n      display: flex;\n      position: relative;\n    }\n    .ngx-cc-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n    .ngx-cc-input-default {\n      background-position: 100%;\n      background-repeat: no-repeat;\n    }\n    .ngx-cc-form-field div.mat-form-field-wrapper div.mat-form-field-flex {\n      align-items: flex-end;\n    }\n    .ngx-cc-suffix {\n      position: absolute;\n      top: -1.5rem;\n      right: 0;\n    }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxCcComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<NgxCcComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChange(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    const value = this.cardNumber.replace(/\\s/g, '');\n    return !(!!value);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  cardNumber = '';\n  cardIcon = cardIcons.default;\n  card: CardConfig;\n  onChange: any;\n  onTouched: any;\n  stateChanges = new Subject<void>();\n  maxNumberLimit: number;\n  @HostBinding() id = `ngx-cc${NgxCcComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n    private creditCardService: NgxCcService\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  writeValue(value: string) {\n    this.cardNumber = value || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateIcon(event: Event) {\n    const value = (event.target as HTMLInputElement).value.replace(/\\s/g, '');\n    let cardType = 'default';\n    this.onChange(value);\n    this.ngControl.control.markAsDirty();\n    this.card = this.creditCardService.getCardType(value);\n    if (this.card) {\n      this.maxNumberLimit = Math.max(...this.card.lengths);\n      cardType = this.card.type;\n    }\n    this.cardNumber = this.creditCardService.prettyCardNumber(value, cardType);\n    this.cardIcon = !value ? cardIcons.default : cardIcons[cardType];\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { FormControl } from '@angular/forms';\nimport validator from 'card-validator';\n\nexport const CardExpirationValidator = (control: FormControl) => {\n    const date = validator.expirationDate(control.value);\n    return (date.month && date.year) ? null : { invalidDate: true };\n};\n","import {\n  Component, HostBinding, Input, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ViewEncapsulation, ElementRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { CardExpirationValidator } from '../validators/ngx-cc-date.validator';\n\n@Component({\n  selector: 'ngx-cc-date',\n  template: `\n    <div class=\"ngx-cc-date-container\" [ngClass]=\"styleClass\">\n      <input\n      ngxNumberOnly\n      ngxFormatDate\n      maxlength=\"7\"\n      [ngClass]=\"{'ngx-cc-date-input': !defaultStyles}\"\n      type=\"text\"\n      [placeholder]=\"placeholder || ''\"\n      [required]=\"required\"\n      [disabled]=\"disabled\"\n      [value]=\"cardDate\"\n      (blur)=\"updateOnTouch()\"\n      (input)=\"updateDate()\"\n      >\n    </div>\n  `,\n  styles: [`\n    .ngx-cc-date-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CcDateComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useValue: CardExpirationValidator,\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => CcDateComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CcDateComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<CcDateComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChanges(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    return !(!!this.cardDate);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  stateChanges = new Subject<void>();\n  cardDate = '';\n  onChanges: any;\n  onTouched: any;\n\n  @HostBinding() id = `ngx-cc${CcDateComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  writeValue(val: string) {\n    this.cardDate = val || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChanges = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateDate() {\n    if (this.ngControl) {\n      this.onChanges(this.ngControl.control.value);\n      this.ngControl.control.markAsDirty();\n      this.cardDate = this.ngControl.control.value;\n    }\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n      this.cardDate = this.ngControl.control.value;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { ElementRef, Directive, Input, HostListener } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Directive({\n  selector: '[ngxNumberOnly]'\n})\nexport class NumberOnlyDirective {\n\n  @Input()\n  get ngxNumberOnly() {\n    return this._ngxNumberOnly;\n  }\n\n  set ngxNumberOnly(flag: boolean) {\n    this._ngxNumberOnly = coerceBooleanProperty(flag);\n  }\n\n  @Input() ngxMaxLength: number;\n\n  private _ngxNumberOnly: boolean;\n\n  @HostListener('keydown', ['$event']) onKeyDown(event: KeyboardEvent) {\n    if (this.ngxNumberOnly) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(event.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (event.keyCode === 65 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+C\n        (event.keyCode === 67 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+V\n        (event.keyCode === 86 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+X\n        (event.keyCode === 88 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: home, end, left, right\n        (event.keyCode >= 35 && event.keyCode <= 39)) {\n        // let it happen, don't do anything\n        return;\n      }\n      // Ensure that it is a number and stop the keypress\n      if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {\n        event.preventDefault();\n      }\n      // If creditcard number exceeds the limit provided by braintree api return false.\n      if (this.ngxMaxLength) {\n        const value = (event.target as HTMLInputElement).value.replace(/\\s/g, '').length;\n        return (value < this.ngxMaxLength);\n      }\n    }\n  }\n\n  constructor(private elRef: ElementRef<HTMLInputElement>) { }\n\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[ngxFormatDate]'\n})\nexport class FormatDateDirective {\n\n  /**\n   * isUpdated - check if input is udpated or not\n   */\n  isUpdated = false;\n\n  constructor(private control: NgControl) { }\n\n  @HostListener('input', ['$event']) formatDate(event: KeyboardEvent) {\n    const eventValue = (event.target as HTMLInputElement).value;\n    const value = parseInt(eventValue, 10);\n    if (!eventValue) {\n      this.isUpdated = false;\n      this.control.control.setValue(eventValue);\n      return;\n    }\n    if (!this.isUpdated && value >= 10 && value <= 12) {\n      this.control.control.setValue(`${value} / `);\n      this.isUpdated = true;\n    } else if (!this.isUpdated && value >= 2 && value <= 9) {\n      this.control.control.setValue(`0${value} / `);\n      this.isUpdated = true;\n    } else if (\n      !this.isUpdated &&\n      eventValue.length === 2 && (value < 12 && value > 0)) {\n      this.control.control.setValue(`${eventValue} / `);\n      this.isUpdated = true;\n    } else {\n      this.control.control.setValue(eventValue);\n    }\n  }\n\n}\n","import {\n  Component, HostBinding, Input, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ElementRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, AbstractControl, ValidationErrors, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\nimport validator from 'card-validator';\n\n@Component({\n  selector: 'ngx-cc-cvv',\n  template: `\n    <div class=\"ngx-cc-cvv-container\" [ngClass]=\"styleClass\">\n      <input\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxCvvLength\"\n        [ngClass]=\"{'ngx-cc-cvv-input': !defaultStyles}\"\n        type=\"text\"\n        [placeholder]=\"placeholder || ''\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardCvv\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateCvv($event)\">\n    </div>\n  `,\n  styles: [`\n    .ngx-cc-cvv-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    }\n  ]\n})\nexport class CcCvvComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<CcCvvComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChanges(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    return !(!!this.cardCvv);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n\n  @Input('cvv-size')\n  get cvvSize(): number {\n    return this._cvvSize;\n  }\n  set cvvSize(value: number) {\n    this._cvvSize = value;\n    if (this.ngControl) {\n      this.ngControl.control.updateValueAndValidity();\n    }\n  }\n\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _cvvSize: number;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  stateChanges = new Subject<void>();\n\n  cardCvv = '';\n  onChanges: any;\n  onTouched: any;\n  maxCvvLength = 4;\n\n  @HostBinding() id = `ngx-cc${CcCvvComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    const cvv = validator.cvv(control.value, this.cvvSize);\n    return cvv.isValid ? null : { invalidCvv: true };\n  }\n\n  writeValue(val: string) {\n    this.cardCvv = val || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChanges = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateCvv(event: Event) {\n    const value = (event.target as HTMLInputElement).value;\n    this.cardCvv = value;\n    this.onChanges(value);\n    this.ngControl.control.markAsDirty();\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgxCcComponent } from './ngx-cc.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NumberOnlyDirective } from './directives/number-only/number-only.directive';\nimport { CcDateComponent } from './cc-date/cc-date.component';\nimport { FormatDateDirective } from './directives/format-date/format-date.directive';\nimport { CcCvvComponent } from './cc-cvv/cc-cvv.component';\n\n@NgModule({\n  declarations: [\n    NgxCcComponent,\n    NumberOnlyDirective,\n    CcDateComponent,\n    FormatDateDirective,\n    CcCvvComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    NgxCcComponent,\n    CcDateComponent,\n    CcCvvComponent,\n    NumberOnlyDirective,\n    FormatDateDirective\n  ]\n})\nexport class NgxCcModule { }\n"]}