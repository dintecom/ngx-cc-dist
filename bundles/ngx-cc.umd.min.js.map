{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-cc/lib/ngx-cc.service.ts","ng://ngx-cc/lib/validators/ngx-cc.validator.ts","ng://ngx-cc/lib/ngx-cc.config.ts","ng://ngx-cc/lib/ngx-cc.component.ts","ng://ngx-cc/lib/validators/ngx-cc-date.validator.ts","ng://ngx-cc/lib/cc-date/cc-date.component.ts","ng://ngx-cc/lib/directives/number-only/number-only.directive.ts","ng://ngx-cc/lib/directives/format-date/format-date.directive.ts","ng://ngx-cc/lib/cc-cvv/cc-cvv.component.ts","ng://ngx-cc/lib/ngx-cc.icons.ts","ng://ngx-cc/lib/ngx-cc.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","NgxCcService","getCardType","cardNumber","creditCardType","prettyCardNumber","cardType","card","getTypeInfo","offsets","concat","gaps","components","start","end","Math","min","substring","join","Injectable","providedIn","CardValidator","control","validator","number","isValid","invalidCardNumber","CC_CARD_ICONS_TOKEN","InjectionToken","NgxCcComponent","injector","elRef","fm","parentForm","parentFormGroup","defaultErrorStateMatcher","creditCardService","cardIcons","_this","_disabled","_defaultStyles","_required","ngControl","focused","errorState","cardIcon","default","stateChanges","Subject","id","NgxCcComponent_1","nextId","describedBy","_formSubmitSubscription","ngSubmit","subscribe","markAsTouched","monitor","nativeElement","origin","_value","onChange","_placeholder","placeholder","replace","req","coerceBooleanProperty","disabled","dis","val","empty","ngOnInit","get","NgControl","valueAccessor","ngDoCheck","updateErrorState","writeValue","registerOnChange","fn","registerOnTouched","onTouched","setDescribedByIds","ids","onContainerClick","event","tagName","toLowerCase","querySelector","focus","updateIcon","markAsDirty","maxNumberLimit","max","__spread","lengths","type","updateOnTouch","ngOnDestroy","unsubscribe","stopMonitoring","complete","oldState","parent","matcher","newState","isErrorState","Injector","ElementRef","FocusMonitor","NgForm","Optional","FormGroupDirective","ErrorStateMatcher","Inject","args","Input","HostBinding","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","useValue","ɵ0","MatFormFieldControl","encapsulation","ViewEncapsulation","None","CardExpirationValidator","date","expirationDate","month","year","invalidDate","CcDateComponent","cardDate","CcDateComponent_1","onChanges","updateDate","ɵ0$1","NumberOnlyDirective","_ngxNumberOnly","flag","onKeyDown","ngxNumberOnly","indexOf","keyCode","ctrlKey","metaKey","shiftKey","preventDefault","ngxMaxLength","HostListener","KeyboardEvent","Directive","FormatDateDirective","isUpdated","formatDate","eventValue","parseInt","setValue","CcCvvComponent","cardCvv","maxCvvLength","CcCvvComponent_1","_cvvSize","updateValueAndValidity","validate","cvv","cvvSize","invalidCvv","updateCvv","externalCardIcons","visa","mastercard","american-express","diners-club","discover","jcb","unionpay","maestro","mir","elo","hiper","hipercard","NgxCcModule","forRoot","config","ngModule","NgxCcModule_1","NgModule","declarations","imports","CommonModule","FormsModule","MatInputModule","MatFormFieldModule","exports","ɵ0$2"],"mappings":"2iCA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAezB,SAASQ,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HC,EAAvHC,EAAId,UAAUC,OAAQc,EAAID,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOlB,OAAOsB,yBAAyBN,EAAQC,GAAOC,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAAST,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAId,EAAIW,EAAWR,OAAS,EAAGH,GAAK,EAAGA,KAASe,EAAIJ,EAAWX,MAAIiB,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAEH,EAAQC,EAAKI,GAAKF,EAAEH,EAAQC,KAASI,GAChJ,OAAOD,EAAI,GAAKC,GAAKrB,OAAOyB,eAAeT,EAAQC,EAAKI,GAAIA,EAGzD,SAASK,EAAQC,EAAYC,GAChC,OAAO,SAAUZ,EAAQC,GAAOW,EAAUZ,EAAQC,EAAKU,IAGpD,SAASE,EAAWC,EAAaC,GACpC,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAyD7G,SAASE,EAAOC,EAAG7B,GACtB,IAAI8B,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYiB,EAA3BlC,EAAI+B,EAAExB,KAAKuB,GAAOK,EAAK,GAC3B,IACI,WAAc,IAANlC,GAAgBA,KAAM,MAAQgB,EAAIjB,EAAEoC,QAAQC,MAAMF,EAAGG,KAAKrB,EAAEsB,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GACjC,QACQ,IACQvB,IAAMA,EAAEoB,OAASN,EAAI/B,EAAU,SAAI+B,EAAExB,KAAKP,GAE1D,QAAkB,GAAIkC,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,mBC/HX,SAAAM,YAEEA,EAAApC,UAAAqC,YAAA,SAAYC,GACV,OAAOC,EAAeD,GAAY,IAGpCF,EAAApC,UAAAwC,iBAAA,SAAiBF,EAAoBG,GACnC,IAAMC,EAAOH,EAAeI,YAAYF,GAExC,GAAIC,EAAM,CAIR,IAHA,IAAME,EAAU,GAAGC,OAAO,EAAGH,EAAKI,KAAMR,EAAWxC,QAC7CiD,EAAa,GAEVpD,EAAI,EAAGiD,EAAQjD,GAAK2C,EAAWxC,OAAQH,IAAK,CACnD,IAAMqD,EAAQJ,EAAQjD,GAChBsD,EAAMC,KAAKC,IAAIP,EAAQjD,EAAI,GAAI2C,EAAWxC,QAChDiD,EAAWd,KAAKK,EAAWc,UAAUJ,EAAOC,IAG9C,OAAOF,EAAWM,KAAK,KAGzB,OAAOf,iGAtBEF,EAAY/B,EAAA,CAHxBiD,EAAAA,WAAW,CACVC,WAAY,UAEDnB,MCLAoB,EAAgB,SAACC,GAC1B,OAAOC,EAAUC,OAAOF,EAAQvB,OAAO0B,QAAU,KAAO,CAAEC,mBAAmB,ICkBpEC,EAAsB,IAAIC,EAAAA,eAAuB,yBCiC9CP,EA0ChBQ,EAAA,WAsFE,SAAAA,EACUC,EACAC,EACAC,EACYC,EACAC,EACZC,EACAC,EAC6BC,GARvC,IAAAC,EAAArE,KACUA,KAAA6D,SAAAA,EACA7D,KAAA8D,MAAAA,EACA9D,KAAA+D,GAAAA,EACY/D,KAAAgE,WAAAA,EACAhE,KAAAiE,gBAAAA,EACZjE,KAAAkE,yBAAAA,EACAlE,KAAAmE,kBAAAA,EAC6BnE,KAAAoE,UAAAA,EAhC/BpE,KAAAsE,WAAY,EAEZtE,KAAAuE,gBAAiB,EAEjBvE,KAAAwE,WAAY,EAGpBxE,KAAAyE,UAAuB,KACvBzE,KAAA0E,SAAU,EACV1E,KAAA2E,YAAa,EACb3E,KAAAkC,WAAa,GACblC,KAAA4E,SAAW5E,KAAKoE,UAAUS,QAI1B7E,KAAA8E,aAAe,IAAIC,EAAAA,QAEJ/E,KAAAgF,GAAK,SAASC,EAAeC,OACNlF,KAAAmF,YAAc,IAgBnCnF,KAAKiE,iBAAmBjE,KAAKgE,cAE1ChE,KAAKoF,wBAA0BnB,EAAgBoB,SAASC,WAAU,WAChEjB,EAAKI,UAAUpB,QAAQkC,oBAI3BxB,EAAGyB,QAAQ1B,EAAM2B,eAAe,GAAMH,WAAU,SAAAI,GAC9CrB,EAAKK,UAAYgB,EACjBrB,EAAKS,aAAanD,gBAgFxB,SAzLaiC,EAKXzE,OAAAyB,eAAIgD,EAAAhE,UAAA,QAAK,KAAT,WACE,OAAOI,KAAK2F,YAEd,SAAUzD,GACRlC,KAAK2F,OAASzD,EACdlC,KAAK4F,SAAS1D,GACdlC,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAIgD,EAAAhE,UAAA,cAAW,KAAf,WACE,OAAOI,KAAK6F,kBAEd,SAAgBC,GACd9F,KAAK6F,aAAeC,EACpB9F,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAIgD,EAAAhE,UAAA,QAAK,KAAT,WAEE,OADcI,KAAKkC,WAAW6D,QAAQ,MAAO,qCAK/C5G,OAAAyB,eAAIgD,EAAAhE,UAAA,WAAQ,KAAZ,WACE,OAAOI,KAAKwE,eAEd,SAAawB,GACXhG,KAAKwE,UAAYyB,EAAAA,sBAAsBD,GACvChG,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAIgD,EAAAhE,UAAA,WAAQ,KAAZ,WACE,OAAII,KAAKyE,WAAyC,OAA5BzE,KAAKyE,UAAUyB,SAC5BlG,KAAKyE,UAAUyB,SAEjBlG,KAAKsE,eAEd,SAAa6B,GACXnG,KAAKsE,UAAY2B,EAAAA,sBAAsBE,GACvCnG,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAIgD,EAAAhE,UAAA,gBAAa,KAAjB,WACE,OAAOI,KAAKuE,oBAEd,SAAkB6B,GAChBpG,KAAKuE,eAAiB0B,EAAAA,sBAAsBG,oCA2B9CjH,OAAAyB,eAAIgD,EAAAhE,UAAA,mBAAgB,KAApB,WACE,OAAOI,KAAK0E,UAAY1E,KAAKqG,uCA0B/BzC,EAAAhE,UAAA0G,SAAA,WACEtG,KAAKyE,UAAYzE,KAAK6D,SAAS0C,IAAIC,EAAAA,WACZ,OAAnBxG,KAAKyE,YAGPzE,KAAKyE,UAAUgC,cAAgBzG,OAInC4D,EAAAhE,UAAA8G,UAAA,WACM1G,KAAKyE,WACPzE,KAAK2G,oBAIT/C,EAAAhE,UAAAgH,WAAA,SAAW9E,GACT9B,KAAKkC,WAAaJ,GAAS,IAG7B8B,EAAAhE,UAAAiH,iBAAA,SAAiBC,GACf9G,KAAK4F,SAAWkB,GAGlBlD,EAAAhE,UAAAmH,kBAAA,SAAkBD,GAChB9G,KAAKgH,UAAYF,GAGnBlD,EAAAhE,UAAAqH,kBAAA,SAAkBC,GAChBlH,KAAKmF,YAAc+B,EAAIjE,KAAK,MAG9BW,EAAAhE,UAAAuH,iBAAA,SAAiBC,GACyC,UAAnDA,EAAMjH,OAAmBkH,QAAQC,eACpCtH,KAAK8D,MAAM2B,cAAc8B,cAAc,SAASC,SAIpD5D,EAAAhE,UAAA6H,WAAA,SAAWL,GACT,IAAMtF,EAASsF,EAAMjH,OAA4B2B,MAAMiE,QAAQ,MAAO,IAClE1D,EAAW,UACfrC,KAAK4F,SAAS9D,GACd9B,KAAKyE,UAAUpB,QAAQqE,cACvB1H,KAAKsC,KAAOtC,KAAKmE,kBAAkBlC,YAAYH,GAC3C9B,KAAKsC,OACPtC,KAAK2H,eAAiB7E,KAAK8E,IAAG7H,MAAR+C,KJhHrB,WACH,IAAK,IAAIpB,EAAK,GAAInC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CmC,EAAKA,EAAGe,OAAOrB,EAAO3B,UAAUF,KACpC,OAAOmC,EI6GqBmG,CAAQ7H,KAAKsC,KAAKwF,UAC5CzF,EAAWrC,KAAKsC,KAAKyF,MAEvB/H,KAAKkC,WAAalC,KAAKmE,kBAAkB/B,iBAAiBN,EAAOO,GACjErC,KAAK4E,SAAY9C,EAAiC9B,KAAKoE,UAAU/B,GAAxCrC,KAAKoE,UAAUS,SAG1CjB,EAAAhE,UAAAoI,cAAA,WACMhI,KAAKyE,YACPzE,KAAKgH,UAAUhH,KAAKyE,UAAUpB,QAAQvB,OACtC9B,KAAKyE,UAAUpB,QAAQkC,kBAI3B3B,EAAAhE,UAAAqI,YAAA,WACMjI,KAAKoF,yBAAyBpF,KAAKoF,wBAAwB8C,cAC/DlI,KAAK+D,GAAGoE,eAAenI,KAAK8D,MAAM2B,eAClCzF,KAAK8E,aAAasD,YAGpBxE,EAAAhE,UAAA+G,iBAAA,WACE,IAAM0B,EAAWrI,KAAK2E,WAChB2D,EAAStI,KAAKiE,iBAAmBjE,KAAKgE,WACtCuE,EAAUvI,KAAKkE,yBACfb,EAAUrD,KAAKyE,UAAYzE,KAAKyE,UAAUpB,QAAyB,KACnEmF,EAAWD,EAAQE,aAAapF,EAASiF,GAE3CE,IAAaH,IACfrI,KAAK2E,WAAa6D,EAClBxI,KAAK8E,aAAanD,SApLfiC,EAAAsB,OAAS,2CAqFIwD,EAAAA,gBACHC,EAAAA,kBACHC,EAAAA,oBACoBC,EAAAA,OAAM3I,WAAA,CAAA,CAAA6H,KAArCe,EAAAA,kBACoCC,EAAAA,mBAAkB7I,WAAA,CAAA,CAAA6H,KAAtDe,EAAAA,kBACiCE,EAAAA,yBACPhH,kCAC1BiH,EAAAA,OAAMC,KAAA,CAACxF,QA3FDzD,EAAA,CAARkJ,EAAAA,kEAEDlJ,EAAA,CADCkJ,EAAAA,2FAWDlJ,EAAA,CADCkJ,EAAAA,iGAUDlJ,EAAA,CADCkJ,EAAAA,qFAODlJ,EAAA,CADCkJ,EAAAA,gGAUDlJ,EAAA,CADCkJ,EAAAA,gGAaDlJ,EAAA,CADCkJ,EAAAA,mGA6BclJ,EAAA,CAAdmJ,EAAAA,gEACqCnJ,EAAA,CAArCmJ,EAAAA,YAAY,oFAEbnJ,EAAA,CADCmJ,EAAAA,YAAY,0GAjFFxF,EAAcqB,EAAAhF,EAAA,CAhF1BoJ,EAAAA,UAAU,CACTC,SAAU,SACVC,SAAU,85BA4BVC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA3E,KAC9B4E,OAAO,GAET,CACEJ,QAASK,EAAAA,cACTC,SAAQC,EACRH,OAAO,GAET,CACEJ,QAASQ,EAAAA,oBACTN,YAAaC,EAAAA,YAAW,WAAM,OAAA3E,KAC9B4E,OAAO,IAkCXK,cAAeC,EAAAA,kBAAkBC,aA9B/B,ioBA0HCvJ,EAAA,EAAAiI,EAAAA,YACAjI,EAAA,EAAAiI,EAAAA,YAGAjI,EAAA,EAAAoI,EAAAA,OAAOvF,2BAPUgF,EAAAA,SACHC,EAAAA,WACHC,EAAAA,aACoBC,EAAAA,OACKE,EAAAA,mBACHC,EAAAA,kBACPhH,EAAY7C,UA7F9ByE,GAAb,GC9FayG,EAA0B,SAAChH,GACpC,IAAMiH,EAAOhH,EAAUiH,eAAelH,EAAQvB,OAC9C,OAAQwI,EAAKE,OAASF,EAAKG,KAAQ,KAAO,CAAEC,aAAa,MC8C7CL,EAWhBM,EAAA,WAmFE,SAAAA,EACU9G,EACAC,EACAC,EACYC,EACAC,EACZC,GANV,IAAAG,EAAArE,KACUA,KAAA6D,SAAAA,EACA7D,KAAA8D,MAAAA,EACA9D,KAAA+D,GAAAA,EACY/D,KAAAgE,WAAAA,EACAhE,KAAAiE,gBAAAA,EACZjE,KAAAkE,yBAAAA,EA5BFlE,KAAAsE,WAAY,EAEZtE,KAAAuE,gBAAiB,EAEjBvE,KAAAwE,WAAY,EAGpBxE,KAAAyE,UAAuB,KACvBzE,KAAA0E,SAAU,EACV1E,KAAA2E,YAAa,EACb3E,KAAA8E,aAAe,IAAIC,EAAAA,QACnB/E,KAAA4K,SAAW,GAII5K,KAAAgF,GAAK,SAAS6F,EAAgB3F,OACPlF,KAAAmF,YAAc,IAcnCnF,KAAKiE,iBAAmBjE,KAAKgE,cAE1ChE,KAAKoF,wBAA0BnB,EAAgBoB,SAASC,WAAU,WAChEjB,EAAKI,UAAUpB,QAAQkC,oBAI3BxB,EAAGyB,QAAQ1B,EAAM2B,eAAe,GAAMH,WAAU,SAAAI,GAC9CrB,EAAKK,UAAYgB,EACjBrB,EAAKS,aAAanD,gBA2ExB,SA/KagJ,EAKXxL,OAAAyB,eAAI+J,EAAA/K,UAAA,QAAK,KAAT,WACE,OAAOI,KAAK2F,YAEd,SAAUzD,GACRlC,KAAK2F,OAASzD,EACdlC,KAAK8K,UAAU5I,GACflC,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAI+J,EAAA/K,UAAA,cAAW,KAAf,WACE,OAAOI,KAAK6F,kBAEd,SAAgBC,GACd9F,KAAK6F,aAAeC,EACpB9F,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAI+J,EAAA/K,UAAA,QAAK,KAAT,WACE,OAAWI,KAAK4K,0CAIlBzL,OAAAyB,eAAI+J,EAAA/K,UAAA,WAAQ,KAAZ,WACE,OAAOI,KAAKwE,eAEd,SAAawB,GACXhG,KAAKwE,UAAYyB,EAAAA,sBAAsBD,GACvChG,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAI+J,EAAA/K,UAAA,WAAQ,KAAZ,WACE,OAAII,KAAKyE,WAAyC,OAA5BzE,KAAKyE,UAAUyB,SAC5BlG,KAAKyE,UAAUyB,SAEjBlG,KAAKsE,eAEd,SAAa6B,GACXnG,KAAKsE,UAAY2B,EAAAA,sBAAsBE,GACvCnG,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAI+J,EAAA/K,UAAA,gBAAa,KAAjB,WACE,OAAOI,KAAKuE,oBAEd,SAAkB6B,GAChBpG,KAAKuE,eAAiB0B,EAAAA,sBAAsBG,oCAyB9CjH,OAAAyB,eAAI+J,EAAA/K,UAAA,mBAAgB,KAApB,WACE,OAAOI,KAAK0E,UAAY1E,KAAKqG,uCAwB/BsE,EAAA/K,UAAA0G,SAAA,WACEtG,KAAKyE,UAAYzE,KAAK6D,SAAS0C,IAAIC,EAAAA,WACZ,OAAnBxG,KAAKyE,YAGPzE,KAAKyE,UAAUgC,cAAgBzG,OAInC2K,EAAA/K,UAAA8G,UAAA,WACM1G,KAAKyE,WACPzE,KAAK2G,oBAITgE,EAAA/K,UAAAgH,WAAA,SAAWR,GACTpG,KAAK4K,SAAWxE,GAAO,IAGzBuE,EAAA/K,UAAAiH,iBAAA,SAAiBC,GACf9G,KAAK8K,UAAYhE,GAGnB6D,EAAA/K,UAAAmH,kBAAA,SAAkBD,GAChB9G,KAAKgH,UAAYF,GAGnB6D,EAAA/K,UAAAqH,kBAAA,SAAkBC,GAChBlH,KAAKmF,YAAc+B,EAAIjE,KAAK,MAG9B0H,EAAA/K,UAAAuH,iBAAA,SAAiBC,GACyC,UAAnDA,EAAMjH,OAAmBkH,QAAQC,eACpCtH,KAAK8D,MAAM2B,cAAc8B,cAAc,SAASC,SAIpDmD,EAAA/K,UAAAmL,WAAA,WACM/K,KAAKyE,YACPzE,KAAK8K,UAAU9K,KAAKyE,UAAUpB,QAAQvB,OACtC9B,KAAKyE,UAAUpB,QAAQqE,cACvB1H,KAAK4K,SAAW5K,KAAKyE,UAAUpB,QAAQvB,QAI3C6I,EAAA/K,UAAAoI,cAAA,WACMhI,KAAKyE,YACPzE,KAAKgH,UAAUhH,KAAKyE,UAAUpB,QAAQvB,OACtC9B,KAAKyE,UAAUpB,QAAQkC,gBACvBvF,KAAK4K,SAAW5K,KAAKyE,UAAUpB,QAAQvB,QAI3C6I,EAAA/K,UAAAqI,YAAA,WACMjI,KAAKoF,yBAAyBpF,KAAKoF,wBAAwB8C,cAC/DlI,KAAK+D,GAAGoE,eAAenI,KAAK8D,MAAM2B,eAClCzF,KAAK8E,aAAasD,YAGpBuC,EAAA/K,UAAA+G,iBAAA,WACE,IAAM0B,EAAWrI,KAAK2E,WAChB2D,EAAStI,KAAKiE,iBAAmBjE,KAAKgE,WACtCuE,EAAUvI,KAAKkE,yBACfb,EAAUrD,KAAKyE,UAAYzE,KAAKyE,UAAUpB,QAAyB,KACnEmF,EAAWD,EAAQE,aAAapF,EAASiF,GAE3CE,IAAaH,IACfrI,KAAK2E,WAAa6D,EAClBxI,KAAK8E,aAAanD,SA1KfgJ,EAAAzF,OAAS,2CAkFIwD,EAAAA,gBACHC,EAAAA,kBACHC,EAAAA,oBACoBC,EAAAA,OAAM3I,WAAA,CAAA,CAAA6H,KAArCe,EAAAA,kBACoCC,EAAAA,mBAAkB7I,WAAA,CAAA,CAAA6H,KAAtDe,EAAAA,kBACiCE,EAAAA,qBAtF3B/I,EAAA,CAARkJ,EAAAA,kEAEDlJ,EAAA,CADCkJ,EAAAA,2FAWDlJ,EAAA,CADCkJ,EAAAA,iGAUDlJ,EAAA,CADCkJ,EAAAA,qFAMDlJ,EAAA,CADCkJ,EAAAA,gGAUDlJ,EAAA,CADCkJ,EAAAA,gGAaDlJ,EAAA,CADCkJ,EAAAA,mGA2BclJ,EAAA,CAAdmJ,EAAAA,gEACqCnJ,EAAA,CAArCmJ,EAAAA,YAAY,oFAEbnJ,EAAA,CADCmJ,EAAAA,YAAY,0GA9EFuB,EAAeE,EAAA5K,EAAA,CAhD3BoJ,EAAAA,UAAU,CACTC,SAAU,cACVC,SAAU,obA2BVC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAiB,KAC9BhB,OAAO,GAET,CACEJ,QAASK,EAAAA,cACTC,SAAQiB,EACRnB,OAAO,GAET,CACEJ,QAASQ,EAAAA,oBACTN,YAAaC,EAAAA,YAAW,WAAM,OAAAiB,KAC9BhB,OAAO,IAGXK,cAAeC,EAAAA,kBAAkBC,aA3BxB,iLAoHNvJ,EAAA,EAAAiI,EAAAA,YACAjI,EAAA,EAAAiI,EAAAA,mCAJiBJ,EAAAA,SACHC,EAAAA,WACHC,EAAAA,aACoBC,EAAAA,OACKE,EAAAA,mBACHC,EAAAA,qBAzFzB2B,GAAb,gBCbE,SAAAM,EAAoBnH,GAAA9D,KAAA8D,MAAAA,EAEtB,OA1CE3E,OAAAyB,eAAIqK,EAAArL,UAAA,gBAAa,KAAjB,WACE,OAAOI,KAAKkL,oBAGd,SAAkBC,GAChBnL,KAAKkL,eAAiBjF,EAAAA,sBAAsBkF,oCAOTF,EAAArL,UAAAwL,UAAA,SAAUhE,GAC7C,GAAIpH,KAAKqL,cAAe,CACtB,IAA6D,IAAzD,CAAC,GAAI,EAAG,EAAG,GAAI,GAAI,IAAK,KAAKC,QAAQlE,EAAMmE,UAE1B,KAAlBnE,EAAMmE,UAAmBnE,EAAMoE,SAAWpE,EAAMqE,UAE9B,KAAlBrE,EAAMmE,UAAmBnE,EAAMoE,SAAWpE,EAAMqE,UAE9B,KAAlBrE,EAAMmE,UAAmBnE,EAAMoE,SAAWpE,EAAMqE,UAE9B,KAAlBrE,EAAMmE,UAAmBnE,EAAMoE,SAAWpE,EAAMqE,UAEhDrE,EAAMmE,SAAW,IAAMnE,EAAMmE,SAAW,GAEzC,OAOF,IAJKnE,EAAMsE,UAAatE,EAAMmE,QAAU,IAAMnE,EAAMmE,QAAU,MAASnE,EAAMmE,QAAU,IAAMnE,EAAMmE,QAAU,MAC3GnE,EAAMuE,iBAGJ3L,KAAK4L,aAEP,OADexE,EAAMjH,OAA4B2B,MAAMiE,QAAQ,MAAO,IAAIrG,OAC1DM,KAAK4L,wDAKAjD,EAAAA,cAxC3B1I,EAAA,CADCkJ,EAAAA,qGASQlJ,EAAA,CAARkJ,EAAAA,oEAIoClJ,EAAA,CAApC4L,EAAAA,aAAa,UAAW,CAAC,4DAA4BC,6EAf3Cb,EAAmBhL,EAAA,CAH/B8L,EAAAA,UAAU,CACTzC,SAAU,2CA6CiBX,EAAAA,cA3ChBsC,mBCOX,SAAAe,EAAoB3I,GAAArD,KAAAqD,QAAAA,EAFpBrD,KAAAiM,WAAY,EA4Bd,OAxBqCD,EAAApM,UAAAsM,WAAA,SAAW9E,GAC5C,IAAM+E,EAAc/E,EAAMjH,OAA4B2B,MAChDA,EAAQsK,SAASD,EAAY,IACnC,IAAKA,EAGH,OAFAnM,KAAKiM,WAAY,OACjBjM,KAAKqD,QAAQA,QAAQgJ,SAASF,IAG3BnM,KAAKiM,WAAanK,GAAS,IAAMA,GAAS,IAC7C9B,KAAKqD,QAAQA,QAAQgJ,SAAYvK,EAAK,OACtC9B,KAAKiM,WAAY,IACPjM,KAAKiM,WAAanK,GAAS,GAAKA,GAAS,GACnD9B,KAAKqD,QAAQA,QAAQgJ,SAAS,IAAIvK,EAAK,OACvC9B,KAAKiM,WAAY,IAEhBjM,KAAKiM,WACgB,IAAtBE,EAAWzM,QAAiBoC,EAAQ,IAAMA,EAAQ,GAClD9B,KAAKqD,QAAQA,QAAQgJ,SAAYF,EAAU,OAC3CnM,KAAKiM,WAAY,GAEjBjM,KAAKqD,QAAQA,QAAQgJ,SAASF,6CAtBL3F,EAAAA,aAEMvG,EAAA,CAAlC4L,EAAAA,aAAa,QAAS,CAAC,4DAA6BC,8EAT1CE,EAAmB/L,EAAA,CAH/B8L,EAAAA,UAAU,CACTzC,SAAU,2CASmB9C,EAAAA,aAPlBwF,mBCuJX,SAAAM,EACUzI,EACAC,EACAC,EACYC,EACAC,EACZC,GANV,IAAAG,EAAArE,KACUA,KAAA6D,SAAAA,EACA7D,KAAA8D,MAAAA,EACA9D,KAAA+D,GAAAA,EACY/D,KAAAgE,WAAAA,EACAhE,KAAAiE,gBAAAA,EACZjE,KAAAkE,yBAAAA,EAhCFlE,KAAAsE,WAAY,EAEZtE,KAAAuE,gBAAiB,EAEjBvE,KAAAwE,WAAY,EAKpBxE,KAAAyE,UAAuB,KACvBzE,KAAA0E,SAAU,EACV1E,KAAA2E,YAAa,EACb3E,KAAA8E,aAAe,IAAIC,EAAAA,QAEnB/E,KAAAuM,QAAU,GAGVvM,KAAAwM,aAAe,EAEAxM,KAAAgF,GAAK,SAASyH,EAAevH,OACNlF,KAAAmF,YAAc,IAcnCnF,KAAKiE,iBAAmBjE,KAAKgE,cAE1ChE,KAAKoF,wBAA0BnB,EAAgBoB,SAASC,WAAU,WAChEjB,EAAKI,UAAUpB,QAAQkC,oBAI3BxB,EAAGyB,QAAQ1B,EAAM2B,eAAe,GAAMH,WAAU,SAAAI,GAC9CrB,EAAKK,UAAYgB,EACjBrB,EAAKS,aAAanD,gBA8ExB,SAlMa2K,EAKXnN,OAAAyB,eAAI0L,EAAA1M,UAAA,QAAK,KAAT,WACE,OAAOI,KAAK2F,YAEd,SAAUzD,GACRlC,KAAK2F,OAASzD,EACdlC,KAAK8K,UAAU5I,GACflC,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAI0L,EAAA1M,UAAA,cAAW,KAAf,WACE,OAAOI,KAAK6F,kBAEd,SAAgBC,GACd9F,KAAK6F,aAAeC,EACpB9F,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAI0L,EAAA1M,UAAA,QAAK,KAAT,WACE,OAAWI,KAAKuM,yCAIlBpN,OAAAyB,eAAI0L,EAAA1M,UAAA,WAAQ,KAAZ,WACE,OAAOI,KAAKwE,eAEd,SAAawB,GACXhG,KAAKwE,UAAYyB,EAAAA,sBAAsBD,GACvChG,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAI0L,EAAA1M,UAAA,WAAQ,KAAZ,WACE,OAAII,KAAKyE,WAAyC,OAA5BzE,KAAKyE,UAAUyB,SAC5BlG,KAAKyE,UAAUyB,SAEjBlG,KAAKsE,eAEd,SAAa6B,GACXnG,KAAKsE,UAAY2B,EAAAA,sBAAsBE,GACvCnG,KAAK8E,aAAanD,wCAIpBxC,OAAAyB,eAAI0L,EAAA1M,UAAA,gBAAa,KAAjB,WACE,OAAOI,KAAKuE,oBAEd,SAAkB6B,GAChBpG,KAAKuE,eAAiB0B,EAAAA,sBAAsBG,oCAI9CjH,OAAAyB,eAAI0L,EAAA1M,UAAA,UAAO,KAAX,WACE,OAAOI,KAAK0M,cAEd,SAAY5K,GACV9B,KAAK0M,SAAW5K,EACZ9B,KAAKyE,WACPzE,KAAKyE,UAAUpB,QAAQsJ,0DA+B3BxN,OAAAyB,eAAI0L,EAAA1M,UAAA,mBAAgB,KAApB,WACE,OAAOI,KAAK0E,UAAY1E,KAAKqG,uCAwB/BiG,EAAA1M,UAAA0G,SAAA,WACEtG,KAAKyE,UAAYzE,KAAK6D,SAAS0C,IAAIC,EAAAA,WACZ,OAAnBxG,KAAKyE,YAGPzE,KAAKyE,UAAUgC,cAAgBzG,OAInCsM,EAAA1M,UAAA8G,UAAA,WACM1G,KAAKyE,WACPzE,KAAK2G,oBAIT2F,EAAA1M,UAAAgN,SAAA,SAASvJ,GAEP,OADYC,EAAUuJ,IAAIxJ,EAAQvB,MAAO9B,KAAK8M,SACnCtJ,QAAU,KAAO,CAAEuJ,YAAY,IAG5CT,EAAA1M,UAAAgH,WAAA,SAAWR,GACTpG,KAAKuM,QAAUnG,GAAO,IAGxBkG,EAAA1M,UAAAiH,iBAAA,SAAiBC,GACf9G,KAAK8K,UAAYhE,GAGnBwF,EAAA1M,UAAAmH,kBAAA,SAAkBD,GAChB9G,KAAKgH,UAAYF,GAGnBwF,EAAA1M,UAAAqH,kBAAA,SAAkBC,GAChBlH,KAAKmF,YAAc+B,EAAIjE,KAAK,MAG9BqJ,EAAA1M,UAAAuH,iBAAA,SAAiBC,GACyC,UAAnDA,EAAMjH,OAAmBkH,QAAQC,eACpCtH,KAAK8D,MAAM2B,cAAc8B,cAAc,SAASC,SAIpD8E,EAAA1M,UAAAoN,UAAA,SAAU5F,GACR,IAAMtF,EAASsF,EAAMjH,OAA4B2B,MACjD9B,KAAKuM,QAAUzK,EACf9B,KAAK8K,UAAUhJ,GACf9B,KAAKyE,UAAUpB,QAAQqE,eAGzB4E,EAAA1M,UAAAoI,cAAA,WACMhI,KAAKyE,YACPzE,KAAKgH,UAAUhH,KAAKyE,UAAUpB,QAAQvB,OACtC9B,KAAKyE,UAAUpB,QAAQkC,kBAI3B+G,EAAA1M,UAAAqI,YAAA,WACMjI,KAAKoF,yBAAyBpF,KAAKoF,wBAAwB8C,cAC/DlI,KAAK+D,GAAGoE,eAAenI,KAAK8D,MAAM2B,eAClCzF,KAAK8E,aAAasD,YAGpBkE,EAAA1M,UAAA+G,iBAAA,WACE,IAAM0B,EAAWrI,KAAK2E,WAChB2D,EAAStI,KAAKiE,iBAAmBjE,KAAKgE,WACtCuE,EAAUvI,KAAKkE,yBACfb,EAAUrD,KAAKyE,UAAYzE,KAAKyE,UAAUpB,QAAyB,KACnEmF,EAAWD,EAAQE,aAAapF,EAASiF,GAE3CE,IAAaH,IACfrI,KAAK2E,WAAa6D,EAClBxI,KAAK8E,aAAanD,SA7Lf2K,EAAApH,OAAS,2CAkGIwD,EAAAA,gBACHC,EAAAA,kBACHC,EAAAA,oBACoBC,EAAAA,OAAM3I,WAAA,CAAA,CAAA6H,KAArCe,EAAAA,kBACoCC,EAAAA,mBAAkB7I,WAAA,CAAA,CAAA6H,KAAtDe,EAAAA,kBACiCE,EAAAA,qBAtG3B/I,EAAA,CAARkJ,EAAAA,kEAEDlJ,EAAA,CADCkJ,EAAAA,2FAWDlJ,EAAA,CADCkJ,EAAAA,iGAUDlJ,EAAA,CADCkJ,EAAAA,qFAMDlJ,EAAA,CADCkJ,EAAAA,gGAUDlJ,EAAA,CADCkJ,EAAAA,gGAaDlJ,EAAA,CADCkJ,EAAAA,mGASDlJ,EAAA,CADCkJ,EAAAA,MAAM,iGAmCQlJ,EAAA,CAAdmJ,EAAAA,gEACqCnJ,EAAA,CAArCmJ,EAAAA,YAAY,oFAEbnJ,EAAA,CADCmJ,EAAAA,YAAY,0GA9FFkD,EAAcG,EAAAxM,EAAA,CA7C1BoJ,EAAAA,UAAU,CACTC,SAAU,aACVC,SAAU,6bAyBVC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA6C,KAC9B5C,OAAO,GAET,CACEJ,QAASK,EAAAA,cACTH,YAAaC,EAAAA,YAAW,WAAM,OAAA6C,KAC9B5C,OAAO,GAET,CACEJ,QAASQ,EAAAA,oBACTN,YAAaC,EAAAA,YAAW,WAAM,OAAA6C,KAC9B5C,OAAO,YAxBF,gLAmINhJ,EAAA,EAAAiI,EAAAA,YACAjI,EAAA,EAAAiI,EAAAA,mCAJiBJ,EAAAA,SACHC,EAAAA,WACHC,EAAAA,aACoBC,EAAAA,OACKE,EAAAA,mBACHC,EAAAA,qBAzGzBsD,MCxDAW,EAA+B,CAC1CpI,QAAS,iEACTqI,KAAM,kDACNC,WAAY,wDACZC,mBAAoB,kDACpBC,cAAe,yDACfC,SAAU,sDACVC,IAAK,iDACLC,SAAU,sDACVC,QAAS,qDACTC,IAAK,iDACLC,IAAK,iEACLC,MAAO,iEACPC,UAAW,oECsBGZ,EAIhBa,EAAA,WAAA,SAAAA,WAYA,SAZaA,EACJA,EAAAC,QAAP,SAAeC,GACb,MAAO,CACLC,SAAUC,EACV1E,UAAW,CACT,CACEC,QAAS/F,EACTqG,SAAQ7K,EAAAA,EAAA,GAAO+N,GAAsBe,EAAO5J,eAPzC0J,EAAWI,EAAAjO,EAAA,CA5BvBkO,EAAAA,SAAS,CACRC,aAAc,CACZxK,EACAqH,EACAN,EACAqB,EACAM,GAEF+B,QAAS,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,eACAC,EAAAA,oBAEFC,QAAS,CACP9K,EACA+G,EACA2B,EACArB,EACAe,GAEFxC,UAAW,CACT,CACEC,QAAS/F,EACTqG,SAAQ4E,OAIDb,GAAb","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport creditCardType from 'credit-card-type';\nimport { CardConfig } from './ngx-cc.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxCcService {\n\n  getCardType(cardNumber: number | string): CardConfig {\n    return creditCardType(cardNumber)[0];\n  }\n\n  prettyCardNumber(cardNumber: string, cardType) {\n    const card = creditCardType.getTypeInfo(cardType);\n\n    if (card) {\n      const offsets = [].concat(0, card.gaps, cardNumber.length);\n      const components = [];\n\n      for (let i = 0; offsets[i] < cardNumber.length; i++) {\n        const start = offsets[i];\n        const end = Math.min(offsets[i + 1], cardNumber.length);\n        components.push(cardNumber.substring(start, end));\n      }\n\n      return components.join(' ');\n    }\n\n    return cardNumber;\n  }\n}\n","import { FormControl } from '@angular/forms';\nimport validator from 'card-validator';\n\nexport const CardValidator = (control: FormControl) => {\n    return validator.number(control.value).isValid ? null : { invalidCardNumber: true };\n};\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface CardIcons {\r\n  default: string,\r\n  visa: string,\r\n  mastercard: string,\r\n  'american-express': string,\r\n  'diners-club': string,\r\n  discover: string,\r\n  jcb: string,\r\n  unionpay: string,\r\n  maestro: string,\r\n  mir: string,\r\n  elo: string,\r\n  hiper: string,\r\n  hipercard: string,\r\n}\r\n\r\nexport interface CcConfig {\r\n  cardIcons: Partial<CardIcons>;\r\n}\r\n\r\nexport const CC_CARD_ICONS_TOKEN = new InjectionToken<string>('CC_CARD_ICONS_TOKEN');\r\n","import {\n  Component, HostBinding, Input, Inject, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ViewEncapsulation, ElementRef\n} from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { NgxCcService } from './ngx-cc.service';\nimport { CardConfig } from './ngx-cc.model';\nimport { CardValidator } from './validators/ngx-cc.validator';\nimport { CardIcons, CC_CARD_ICONS_TOKEN } from './ngx-cc.config';\n\n@Component({\n  selector: 'ngx-cc',\n  template: `\n      <div class=\"ngx-cc-container\" [ngClass]=\"styleClass\">\n        <input *ngIf=\"!defaultStyles\"\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxNumberLimit\"\n        class=\"ngx-cc-input\"\n        type=\"text\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardNumber\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateIcon($event)\" />\n\n        <input *ngIf=\"defaultStyles\"\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxNumberLimit\"\n        class=\"ngx-cc-input-default\"\n        type=\"text\"\n        [placeholder]=\"placeholder\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardNumber\"\n        [ngStyle]=\"{'background-image': 'url(' + cardIcon + ')'}\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateIcon($event)\" />\n        <img *ngIf=\"!defaultStyles\" class=\"ngx-cc-suffix\" [src]=\"cardIcon\" />\n      </div>\n      `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxCcComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useValue: CardValidator,\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => NgxCcComponent),\n      multi: true\n    }\n  ],\n  styles: [\n    `\n    .ngx-cc-container {\n      display: flex;\n      position: relative;\n    }\n    .ngx-cc-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n    .ngx-cc-input-default {\n      background-position: 100%;\n      background-repeat: no-repeat;\n      background-size: 40px;\n    }\n    .ngx-cc-form-field div.mat-form-field-wrapper div.mat-form-field-flex {\n      align-items: flex-end;\n    }\n    .ngx-cc-suffix {\n      position: absolute;\n      top: -1.5rem;\n      right: 0;\n      width: 40px;\n      height: 40px;\n    }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxCcComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<NgxCcComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChange(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    const value = this.cardNumber.replace(/\\s/g, '');\n    return !(!!value);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  cardNumber = '';\n  cardIcon = this.cardIcons.default;\n  card: CardConfig;\n  onChange: any;\n  onTouched: any;\n  stateChanges = new Subject<void>();\n  maxNumberLimit: number;\n  @HostBinding() id = `ngx-cc${NgxCcComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n    private creditCardService: NgxCcService,\n    @Inject(CC_CARD_ICONS_TOKEN) private cardIcons: CardIcons\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  writeValue(value: string) {\n    this.cardNumber = value || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateIcon(event: Event) {\n    const value = (event.target as HTMLInputElement).value.replace(/\\s/g, '');\n    let cardType = 'default';\n    this.onChange(value);\n    this.ngControl.control.markAsDirty();\n    this.card = this.creditCardService.getCardType(value);\n    if (this.card) {\n      this.maxNumberLimit = Math.max(...this.card.lengths);\n      cardType = this.card.type;\n    }\n    this.cardNumber = this.creditCardService.prettyCardNumber(value, cardType);\n    this.cardIcon = !value ? this.cardIcons.default : this.cardIcons[cardType];\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { FormControl } from '@angular/forms';\nimport validator from 'card-validator';\n\nexport const CardExpirationValidator = (control: FormControl) => {\n    const date = validator.expirationDate(control.value);\n    return (date.month && date.year) ? null : { invalidDate: true };\n};\n","import {\n  Component, HostBinding, Input, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ViewEncapsulation, ElementRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { CardExpirationValidator } from '../validators/ngx-cc-date.validator';\n\n@Component({\n  selector: 'ngx-cc-date',\n  template: `\n    <div class=\"ngx-cc-date-container\" [ngClass]=\"styleClass\">\n      <input\n      ngxNumberOnly\n      ngxFormatDate\n      maxlength=\"7\"\n      [ngClass]=\"{'ngx-cc-date-input': !defaultStyles}\"\n      type=\"text\"\n      [placeholder]=\"placeholder || ''\"\n      [required]=\"required\"\n      [disabled]=\"disabled\"\n      [value]=\"cardDate\"\n      (blur)=\"updateOnTouch()\"\n      (input)=\"updateDate()\"\n      >\n    </div>\n  `,\n  styles: [`\n    .ngx-cc-date-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CcDateComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useValue: CardExpirationValidator,\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => CcDateComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CcDateComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<CcDateComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChanges(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    return !(!!this.cardDate);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  stateChanges = new Subject<void>();\n  cardDate = '';\n  onChanges: any;\n  onTouched: any;\n\n  @HostBinding() id = `ngx-cc${CcDateComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  writeValue(val: string) {\n    this.cardDate = val || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChanges = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateDate() {\n    if (this.ngControl) {\n      this.onChanges(this.ngControl.control.value);\n      this.ngControl.control.markAsDirty();\n      this.cardDate = this.ngControl.control.value;\n    }\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n      this.cardDate = this.ngControl.control.value;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { ElementRef, Directive, Input, HostListener } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Directive({\n  selector: '[ngxNumberOnly]'\n})\nexport class NumberOnlyDirective {\n\n  @Input()\n  get ngxNumberOnly() {\n    return this._ngxNumberOnly;\n  }\n\n  set ngxNumberOnly(flag: boolean) {\n    this._ngxNumberOnly = coerceBooleanProperty(flag);\n  }\n\n  @Input() ngxMaxLength: number;\n\n  private _ngxNumberOnly: boolean;\n\n  @HostListener('keydown', ['$event']) onKeyDown(event: KeyboardEvent) {\n    if (this.ngxNumberOnly) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(event.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (event.keyCode === 65 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+C\n        (event.keyCode === 67 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+V\n        (event.keyCode === 86 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+X\n        (event.keyCode === 88 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: home, end, left, right\n        (event.keyCode >= 35 && event.keyCode <= 39)) {\n        // let it happen, don't do anything\n        return;\n      }\n      // Ensure that it is a number and stop the keypress\n      if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {\n        event.preventDefault();\n      }\n      // If creditcard number exceeds the limit provided by braintree api return false.\n      if (this.ngxMaxLength) {\n        const value = (event.target as HTMLInputElement).value.replace(/\\s/g, '').length;\n        return (value < this.ngxMaxLength);\n      }\n    }\n  }\n\n  constructor(private elRef: ElementRef<HTMLInputElement>) { }\n\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[ngxFormatDate]'\n})\nexport class FormatDateDirective {\n\n  /**\n   * isUpdated - check if input is udpated or not\n   */\n  isUpdated = false;\n\n  constructor(private control: NgControl) { }\n\n  @HostListener('input', ['$event']) formatDate(event: KeyboardEvent) {\n    const eventValue = (event.target as HTMLInputElement).value;\n    const value = parseInt(eventValue, 10);\n    if (!eventValue) {\n      this.isUpdated = false;\n      this.control.control.setValue(eventValue);\n      return;\n    }\n    if (!this.isUpdated && value >= 10 && value <= 12) {\n      this.control.control.setValue(`${value} / `);\n      this.isUpdated = true;\n    } else if (!this.isUpdated && value >= 2 && value <= 9) {\n      this.control.control.setValue(`0${value} / `);\n      this.isUpdated = true;\n    } else if (\n      !this.isUpdated &&\n      eventValue.length === 2 && (value < 12 && value > 0)) {\n      this.control.control.setValue(`${eventValue} / `);\n      this.isUpdated = true;\n    } else {\n      this.control.control.setValue(eventValue);\n    }\n  }\n\n}\n","import {\n  Component, HostBinding, Input, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ElementRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, AbstractControl, ValidationErrors, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\nimport validator from 'card-validator';\n\n@Component({\n  selector: 'ngx-cc-cvv',\n  template: `\n    <div class=\"ngx-cc-cvv-container\" [ngClass]=\"styleClass\">\n      <input\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxCvvLength\"\n        [ngClass]=\"{'ngx-cc-cvv-input': !defaultStyles}\"\n        type=\"text\"\n        [placeholder]=\"placeholder || ''\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardCvv\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateCvv($event)\">\n    </div>\n  `,\n  styles: [`\n    .ngx-cc-cvv-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    }\n  ]\n})\nexport class CcCvvComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<CcCvvComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChanges(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    return !(!!this.cardCvv);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n\n  @Input('cvv-size')\n  get cvvSize(): number {\n    return this._cvvSize;\n  }\n  set cvvSize(value: number) {\n    this._cvvSize = value;\n    if (this.ngControl) {\n      this.ngControl.control.updateValueAndValidity();\n    }\n  }\n\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _cvvSize: number;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  stateChanges = new Subject<void>();\n\n  cardCvv = '';\n  onChanges: any;\n  onTouched: any;\n  maxCvvLength = 4;\n\n  @HostBinding() id = `ngx-cc${CcCvvComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    const cvv = validator.cvv(control.value, this.cvvSize);\n    return cvv.isValid ? null : { invalidCvv: true };\n  }\n\n  writeValue(val: string) {\n    this.cardCvv = val || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChanges = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateCvv(event: Event) {\n    const value = (event.target as HTMLInputElement).value;\n    this.cardCvv = value;\n    this.onChanges(value);\n    this.ngControl.control.markAsDirty();\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { CardIcons } from './ngx-cc.config';\n\nexport const externalCardIcons: CardIcons = {\n  default: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png',\n  visa: 'https://img.icons8.com/color/40/000000/visa.png',\n  mastercard: 'https://img.icons8.com/color/40/000000/mastercard.png',\n  'american-express': 'https://img.icons8.com/color/40/000000/amex.png',\n  'diners-club': 'https://img.icons8.com/color/40/000000/diners-club.png',\n  discover: 'https://img.icons8.com/color/40/000000/discover.png',\n  jcb: 'https://img.icons8.com/color/40/000000/jcb.png',\n  unionpay: 'https://img.icons8.com/color/40/000000/unionpay.png',\n  maestro: 'https://img.icons8.com/color/40/000000/maestro.png',\n  mir: 'https://img.icons8.com/color/40/000000/mir.png',\n  elo: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png', // default\n  hiper: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png', // default\n  hipercard: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png', // default\n};\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgxCcComponent } from './ngx-cc.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NumberOnlyDirective } from './directives/number-only/number-only.directive';\nimport { CcDateComponent } from './cc-date/cc-date.component';\nimport { FormatDateDirective } from './directives/format-date/format-date.directive';\nimport { CcCvvComponent } from './cc-cvv/cc-cvv.component';\nimport { CcConfig, CC_CARD_ICONS_TOKEN } from './ngx-cc.config';\nimport { externalCardIcons } from './ngx-cc.icons';\n\n@NgModule({\n  declarations: [\n    NgxCcComponent,\n    NumberOnlyDirective,\n    CcDateComponent,\n    FormatDateDirective,\n    CcCvvComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    NgxCcComponent,\n    CcDateComponent,\n    CcCvvComponent,\n    NumberOnlyDirective,\n    FormatDateDirective\n  ],\n  providers: [\n    {\n      provide: CC_CARD_ICONS_TOKEN,\n      useValue: externalCardIcons,\n    }\n  ]\n})\nexport class NgxCcModule {\n  static forRoot(config: CcConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxCcModule,\n      providers: [\n        {\n          provide: CC_CARD_ICONS_TOKEN,\n          useValue: { ...externalCardIcons, ...config.cardIcons },\n        }\n      ]\n    };\n  }\n}\n"]}