{"version":3,"file":"ngx-cc.js","sources":["ng://ngx-cc/lib/ngx-cc.service.ts","ng://ngx-cc/lib/validators/ngx-cc.validator.ts","ng://ngx-cc/lib/ngx-cc.config.ts","ng://ngx-cc/lib/ngx-cc.icons.ts","ng://ngx-cc/lib/ngx-cc.component.ts","ng://ngx-cc/lib/validators/ngx-cc-date.validator.ts","ng://ngx-cc/lib/cc-date/cc-date.component.ts","ng://ngx-cc/lib/directives/number-only/number-only.directive.ts","ng://ngx-cc/lib/directives/format-date/format-date.directive.ts","ng://ngx-cc/lib/cc-cvv/cc-cvv.component.ts","ng://ngx-cc/lib/ngx-cc.module.ts","ng://ngx-cc/public-api.ts","ng://ngx-cc/ngx-cc.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport creditCardType from 'credit-card-type';\nimport { CardConfig } from './ngx-cc.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxCcService {\n\n  getCardType(cardNumber: number | string): CardConfig {\n    return creditCardType(cardNumber)[0];\n  }\n\n  prettyCardNumber(cardNumber: string, cardType) {\n    const card = creditCardType.getTypeInfo(cardType);\n\n    if (card) {\n      const offsets = [].concat(0, card.gaps, cardNumber.length);\n      const components = [];\n\n      for (let i = 0; offsets[i] < cardNumber.length; i++) {\n        const start = offsets[i];\n        const end = Math.min(offsets[i + 1], cardNumber.length);\n        components.push(cardNumber.substring(start, end));\n      }\n\n      return components.join(' ');\n    }\n\n    return cardNumber;\n  }\n}\n","import { FormControl } from '@angular/forms';\nimport validator from 'card-validator';\n\nexport const CardValidator = (control: FormControl) => {\n    return validator.number(control.value).isValid ? null : { invalidCardNumber: true };\n};\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface CardIcons {\r\n  default: string,\r\n  visa: string,\r\n  mastercard: string,\r\n  'american-express': string,\r\n  'diners-club': string,\r\n  discover: string,\r\n  jcb: string,\r\n  unionpay: string,\r\n  maestro: string,\r\n  mir: string,\r\n  elo: string,\r\n  hiper: string,\r\n  hipercard: string,\r\n}\r\n\r\nexport interface CcConfig {\r\n  cardIcons: Partial<CardIcons>;\r\n}\r\n\r\nexport const CC_CARD_ICONS_TOKEN = new InjectionToken<string>('CC_CARD_ICONS_TOKEN');\r\n","import { CardIcons } from './ngx-cc.config';\n\nexport const externalCardIcons: CardIcons = {\n  default: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png',\n  visa: 'https://img.icons8.com/color/40/000000/visa.png',\n  mastercard: 'https://img.icons8.com/color/40/000000/mastercard.png',\n  'american-express': 'https://img.icons8.com/color/40/000000/amex.png',\n  'diners-club': 'https://img.icons8.com/color/40/000000/diners-club.png',\n  discover: 'https://img.icons8.com/color/40/000000/discover.png',\n  jcb: 'https://img.icons8.com/color/40/000000/jcb.png',\n  unionpay: 'https://img.icons8.com/color/40/000000/unionpay.png',\n  maestro: 'https://img.icons8.com/color/40/000000/maestro.png',\n  mir: 'https://img.icons8.com/color/40/000000/mir.png',\n  elo: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png', // default\n  hiper: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png', // default\n  hipercard: 'https://img.icons8.com/color/40/000000/bank-card-back-side.png', // default\n};\n","import {\n  Component, HostBinding, Input, Inject, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ViewEncapsulation, ElementRef\n} from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { NgxCcService } from './ngx-cc.service';\nimport { CardConfig } from './ngx-cc.model';\nimport { CardValidator } from './validators/ngx-cc.validator';\nimport { CardIcons, CC_CARD_ICONS_TOKEN } from './ngx-cc.config';\nimport { externalCardIcons } from './ngx-cc.icons';\n\n@Component({\n  selector: 'ngx-cc',\n  template: `\n      <div class=\"ngx-cc-container\" [ngClass]=\"styleClass\">\n        <input *ngIf=\"!defaultStyles\"\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxNumberLimit\"\n        class=\"ngx-cc-input\"\n        type=\"text\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardNumber\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateIcon($event)\" />\n\n        <input *ngIf=\"defaultStyles\"\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxNumberLimit\"\n        class=\"ngx-cc-input-default\"\n        type=\"text\"\n        [placeholder]=\"placeholder\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardNumber\"\n        [ngStyle]=\"{'background-image': 'url(' + cardIcon + ')'}\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateIcon($event)\" />\n        <img *ngIf=\"!defaultStyles\" class=\"ngx-cc-suffix\" [src]=\"cardIcon\" />\n      </div>\n      `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxCcComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useValue: CardValidator,\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => NgxCcComponent),\n      multi: true\n    }\n  ],\n  styles: [\n    `\n    .ngx-cc-container {\n      display: flex;\n      position: relative;\n    }\n    .ngx-cc-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n    .ngx-cc-input-default {\n      background-position: 100%;\n      background-repeat: no-repeat;\n      background-size: 40px;\n    }\n    .ngx-cc-form-field div.mat-form-field-wrapper div.mat-form-field-flex {\n      align-items: flex-end;\n    }\n    .ngx-cc-suffix {\n      position: absolute;\n      top: -1.5rem;\n      right: 0;\n      width: 40px;\n      height: 40px;\n    }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxCcComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<NgxCcComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChange(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    const value = this.cardNumber.replace(/\\s/g, '');\n    return !(!!value);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  // tslint:disable-next-line: variable-name\n  private _cardIcons = this.ccCardIcons || externalCardIcons;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  cardNumber = '';\n  cardIcon = this._cardIcons.default;\n  card: CardConfig;\n  onChange: any;\n  onTouched: any;\n  stateChanges = new Subject<void>();\n  maxNumberLimit: number;\n  @HostBinding() id = `ngx-cc${NgxCcComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n    private creditCardService: NgxCcService,\n    @Optional() @Inject(CC_CARD_ICONS_TOKEN) private ccCardIcons: CardIcons\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  writeValue(value: string) {\n    this.cardNumber = value || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateIcon(event: Event) {\n    const value = (event.target as HTMLInputElement).value.replace(/\\s/g, '');\n    let cardType = 'default';\n    this.onChange(value);\n    this.ngControl.control.markAsDirty();\n    this.card = this.creditCardService.getCardType(value);\n    if (this.card) {\n      this.maxNumberLimit = Math.max(...this.card.lengths);\n      cardType = this.card.type;\n    }\n    this.cardNumber = this.creditCardService.prettyCardNumber(value, cardType);\n    this.cardIcon = !value ? this._cardIcons.default : this._cardIcons[cardType];\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { FormControl } from '@angular/forms';\nimport validator from 'card-validator';\n\nexport const CardExpirationValidator = (control: FormControl) => {\n    const date = validator.expirationDate(control.value);\n    return (date.month && date.year) ? null : { invalidDate: true };\n};\n","import {\n  Component, HostBinding, Input, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ViewEncapsulation, ElementRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { CardExpirationValidator } from '../validators/ngx-cc-date.validator';\n\n@Component({\n  selector: 'ngx-cc-date',\n  template: `\n    <div class=\"ngx-cc-date-container\" [ngClass]=\"styleClass\">\n      <input\n      ngxNumberOnly\n      ngxFormatDate\n      maxlength=\"7\"\n      [ngClass]=\"{'ngx-cc-date-input': !defaultStyles}\"\n      type=\"text\"\n      [placeholder]=\"placeholder || ''\"\n      [required]=\"required\"\n      [disabled]=\"disabled\"\n      [value]=\"cardDate\"\n      (blur)=\"updateOnTouch()\"\n      (input)=\"updateDate()\"\n      >\n    </div>\n  `,\n  styles: [`\n    .ngx-cc-date-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CcDateComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useValue: CardExpirationValidator,\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => CcDateComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CcDateComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<CcDateComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChanges(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    return !(!!this.cardDate);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  stateChanges = new Subject<void>();\n  cardDate = '';\n  onChanges: any;\n  onTouched: any;\n\n  @HostBinding() id = `ngx-cc${CcDateComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  writeValue(val: string) {\n    this.cardDate = val || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChanges = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateDate() {\n    if (this.ngControl) {\n      this.onChanges(this.ngControl.control.value);\n      this.ngControl.control.markAsDirty();\n      this.cardDate = this.ngControl.control.value;\n    }\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n      this.cardDate = this.ngControl.control.value;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { ElementRef, Directive, Input, HostListener } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Directive({\n  selector: '[ngxNumberOnly]'\n})\nexport class NumberOnlyDirective {\n\n  @Input()\n  get ngxNumberOnly() {\n    return this._ngxNumberOnly;\n  }\n\n  set ngxNumberOnly(flag: boolean) {\n    this._ngxNumberOnly = coerceBooleanProperty(flag);\n  }\n\n  @Input() ngxMaxLength: number;\n\n  private _ngxNumberOnly: boolean;\n\n  @HostListener('keydown', ['$event']) onKeyDown(event: KeyboardEvent) {\n    if (this.ngxNumberOnly) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(event.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (event.keyCode === 65 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+C\n        (event.keyCode === 67 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+V\n        (event.keyCode === 86 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+X\n        (event.keyCode === 88 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: home, end, left, right\n        (event.keyCode >= 35 && event.keyCode <= 39)) {\n        // let it happen, don't do anything\n        return;\n      }\n      // Ensure that it is a number and stop the keypress\n      if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {\n        event.preventDefault();\n      }\n      // If creditcard number exceeds the limit provided by braintree api return false.\n      if (this.ngxMaxLength) {\n        const value = (event.target as HTMLInputElement).value.replace(/\\s/g, '').length;\n        return (value < this.ngxMaxLength);\n      }\n    }\n  }\n\n  constructor(private elRef: ElementRef<HTMLInputElement>) { }\n\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[ngxFormatDate]'\n})\nexport class FormatDateDirective {\n\n  /**\n   * isUpdated - check if input is udpated or not\n   */\n  isUpdated = false;\n\n  constructor(private control: NgControl) { }\n\n  @HostListener('input', ['$event']) formatDate(event: KeyboardEvent) {\n    const eventValue = (event.target as HTMLInputElement).value;\n    const value = parseInt(eventValue, 10);\n    if (!eventValue) {\n      this.isUpdated = false;\n      this.control.control.setValue(eventValue);\n      return;\n    }\n    if (!this.isUpdated && value >= 10 && value <= 12) {\n      this.control.control.setValue(`${value} / `);\n      this.isUpdated = true;\n    } else if (!this.isUpdated && value >= 2 && value <= 9) {\n      this.control.control.setValue(`0${value} / `);\n      this.isUpdated = true;\n    } else if (\n      !this.isUpdated &&\n      eventValue.length === 2 && (value < 12 && value > 0)) {\n      this.control.control.setValue(`${eventValue} / `);\n      this.isUpdated = true;\n    } else {\n      this.control.control.setValue(eventValue);\n    }\n  }\n\n}\n","import {\n  Component, HostBinding, Input, Injector, Optional,\n  OnInit, OnDestroy, DoCheck, forwardRef,\n  ElementRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl, AbstractControl, ValidationErrors, NgForm, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Subscription } from 'rxjs';\nimport validator from 'card-validator';\n\n@Component({\n  selector: 'ngx-cc-cvv',\n  template: `\n    <div class=\"ngx-cc-cvv-container\" [ngClass]=\"styleClass\">\n      <input\n        ngxNumberOnly\n        [ngxMaxLength]=\"maxCvvLength\"\n        [ngClass]=\"{'ngx-cc-cvv-input': !defaultStyles}\"\n        type=\"text\"\n        [placeholder]=\"placeholder || ''\"\n        [required]=\"required\"\n        [disabled]=\"disabled\"\n        [value]=\"cardCvv\"\n        (blur)=\"updateOnTouch()\"\n        (input)=\"updateCvv($event)\">\n    </div>\n  `,\n  styles: [`\n    .ngx-cc-cvv-input {\n      border: none;\n      background: none;\n      padding: 0;\n      outline: none;\n      font: inherit;\n      text-align: left;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    },\n    {\n      provide: MatFormFieldControl,\n      useExisting: forwardRef(() => CcCvvComponent),\n      multi: true\n    }\n  ]\n})\nexport class CcCvvComponent implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<CcCvvComponent> {\n\n  static nextId = 0;\n  @Input() styleClass: string;\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(cardNumber) {\n    this._value = cardNumber;\n    this.onChanges(cardNumber);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get empty() {\n    return !(!!this.cardCvv);\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(dis: boolean) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get defaultStyles() {\n    return this._defaultStyles;\n  }\n  set defaultStyles(val: any) {\n    this._defaultStyles = coerceBooleanProperty(val);\n  }\n\n  @Input('cvv-size')\n  get cvvSize(): number {\n    return this._cvvSize;\n  }\n  set cvvSize(value: number) {\n    this._cvvSize = value;\n    if (this.ngControl) {\n      this.ngControl.control.updateValueAndValidity();\n    }\n  }\n\n  // tslint:disable-next-line: variable-name\n  private _value: any;\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _disabled = false;\n  // tslint:disable-next-line: variable-name\n  private _defaultStyles = false;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n  // tslint:disable-next-line: variable-name\n  private _cvvSize: number;\n  // tslint:disable-next-line: variable-name\n  private _formSubmitSubscription: Subscription;\n  ngControl: NgControl = null;\n  focused = false;\n  errorState = false;\n  stateChanges = new Subject<void>();\n\n  cardCvv = '';\n  onChanges: any;\n  onTouched: any;\n  maxCvvLength = 4;\n\n  @HostBinding() id = `ngx-cc${CcCvvComponent.nextId}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  constructor(\n    private injector: Injector,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    private defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    const parent = this.parentFormGroup || this.parentForm;\n    if (parent){\n      this._formSubmitSubscription = parentFormGroup.ngSubmit.subscribe(() => {\n        this.ngControl.control.markAsTouched();\n      });\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl !== null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    const cvv = validator.cvv(control.value, this.cvvSize);\n    return cvv.isValid ? null : { invalidCvv: true };\n  }\n\n  writeValue(val: string) {\n    this.cardCvv = val || '';\n  }\n\n  registerOnChange(fn: any) {\n    this.onChanges = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  updateCvv(event: Event) {\n    const value = (event.target as HTMLInputElement).value;\n    this.cardCvv = value;\n    this.onChanges(value);\n    this.ngControl.control.markAsDirty();\n  }\n\n  updateOnTouch() {\n    if (this.ngControl) {\n      this.onTouched(this.ngControl.control.value);\n      this.ngControl.control.markAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formSubmitSubscription) this._formSubmitSubscription.unsubscribe();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.stateChanges.complete();\n  }\n\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this.parentFormGroup || this.parentForm;\n    const matcher = this.defaultErrorStateMatcher;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = matcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgxCcComponent } from './ngx-cc.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NumberOnlyDirective } from './directives/number-only/number-only.directive';\nimport { CcDateComponent } from './cc-date/cc-date.component';\nimport { FormatDateDirective } from './directives/format-date/format-date.directive';\nimport { CcCvvComponent } from './cc-cvv/cc-cvv.component';\nimport { CcConfig, CC_CARD_ICONS_TOKEN } from './ngx-cc.config';\nimport { externalCardIcons } from './ngx-cc.icons';\n\n@NgModule({\n  declarations: [\n    NgxCcComponent,\n    NumberOnlyDirective,\n    CcDateComponent,\n    FormatDateDirective,\n    CcCvvComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    NgxCcComponent,\n    CcDateComponent,\n    CcCvvComponent,\n    NumberOnlyDirective,\n    FormatDateDirective\n  ],\n})\nexport class NgxCcModule {\n  static forRoot(config: CcConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxCcModule,\n      providers: [\n        {\n          provide: CC_CARD_ICONS_TOKEN,\n          useValue: { ...externalCardIcons, ...config.cardIcons },\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-cc\n */\n\nexport * from './lib/ngx-cc.service';\nexport * from './lib/ngx-cc.component';\nexport * from './lib/cc-date/cc-date.component';\nexport * from './lib/ngx-cc.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CcCvvComponent as ɵg} from './lib/cc-cvv/cc-cvv.component';\nexport {FormatDateDirective as ɵf} from './lib/directives/format-date/format-date.directive';\nexport {NumberOnlyDirective as ɵe} from './lib/directives/number-only/number-only.directive';\nexport {CC_CARD_ICONS_TOKEN as ɵc,CardIcons as ɵb} from './lib/ngx-cc.config';\nexport {CardExpirationValidator as ɵd} from './lib/validators/ngx-cc-date.validator';\nexport {CardValidator as ɵa} from './lib/validators/ngx-cc.validator';"],"names":[],"mappings":"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"}